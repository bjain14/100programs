#include <stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node *next;
};
struct Node *first=NULL,*second=NULL,*third=NULL,*next;

void traverse(struct Node *p)
{
    if(p==NULL)
        printf("List is empty");
    else
    {
    
        printf("List is:\n");
        while(p!=0)
        {
            printf("%d ",p->data);
            p=p->next;
        }
    }
}

void create(int A[],int n)
{
    int i;
    struct Node *t,*last;
    first=(struct Node *)malloc(sizeof(struct Node));
    first->data=A[0];
    first->next=NULL;
    last=first;
    for(i=1;i<n;i++)
    {
       t=(struct Node *)malloc(sizeof(struct Node)); 
       t->data=A[i];
       t->next=NULL;
       last->next=t;
       last=t;
    }
}

void create1(int A[],int n)
{
    int i;
    struct Node *t,*last;
    second=(struct Node *)malloc(sizeof(struct Node));
    second->data=A[0];
    second->next=NULL;
    last=second;
    for(i=1;i<n;i++)
    {
       t=(struct Node *)malloc(sizeof(struct Node)); 
       t->data=A[i];
       t->next=NULL;
       last->next=t;
       last=t;
    }
}

void combine(struct Node *p,struct Node *q)
{
    struct Node *last;
    if(p->data < q->data)
    {
        third=last=p;
        p=p->next;
        third->next=NULL;
    }
    else
    {
        third =last=q;
        q=q->next;
        third->next=NULL;
    }
    while(p!=NULL && q!=NULL)
    {
        if(p->data < q->data)
        {
            last->next=p;
            last=p;
            p=p->next;
            last->next=NULL;
        }
        else
        {
            last->next=q;
            last=q;
            q=q->next;
            last->next=NULL;
        }
    }
    if(p!=NULL)last->next=p;
    else last->next=q;
}


int main()
{
    int A[]={10,20,30,40,50};
    int B[]={5,15,25,35,45};
    create(A,5);
    create1(B,5);
    combine(first,second);
    traverse(third);

    return 0;
}
